version: "3.9"
services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: compose-back-optimal-image
    env_file:
    - ./.env
    restart: on-failure
    ports:
      - '4000:3000'
    depends_on:
      - postgres

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: compose-front-optimal-image
    ports:
      - '3005:80'

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    volumes:
      - postgres_data:/data/postgres
    environment:
      POSTGRES_USER: student
      POSTGRES_PASSWORD: student
      POSTGRES_DB: kupipodariday
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      DB_SYNCHRONIZE: '1'
      JWT_SECRET: secret
      PGDATA: /data/postgres

  adminer:
      container_name: adminer
      image: adminer
      ports:
      - 8081:8080

volumes:
  postgres_data:
